@model Tuple<List<Empresa>, List<BlobModel>>
@using Newtonsoft.Json
    @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Index";
    Layout = "_LayoutInicio";

    var session = HttpContextAccessor.HttpContext.Session;
    var empresasSeleccionadasJson = session.GetString("empresasSeleccionadas");
    var empresasSeleccionadas = empresasSeleccionadasJson != null ? JsonConvert.DeserializeObject<List<string>>(empresasSeleccionadasJson) : new List<string>();

}

@section Scripts {


    <script>
        $(document).ready(function () {
            var request = "/Usuarios/_AlumnosSeleccionados?idEmpresa=" + 0;
           

            // Enviar la solicitud AJAX
            $.ajax({
                url: request,
                type: "GET",
                success: function (response) {
                    // Mostrar la respuesta en el contenedor
                    $("#empresasSeleccionadas").html(response);
                }
            });
            $("#formElement input[type='checkbox']").on("change", function (e) {
                var idEmpresa = $(this).val();

               
                // Crear la URL con los valores seleccionados
                var request = "/Usuarios/_AlumnosSeleccionados?idEmpresa=" + idEmpresa;
               

                // Enviar la solicitud AJAX
                $.ajax({
                    url: request,
                    type: "GET",
                    success: function (response) {
                        // Mostrar la respuesta en el contenedor
                        $("#empresasSeleccionadas").html(response);
                    }
                });
            });
        });



    </script>


}
<h1>Empresas</h1>

@* <button id="botonloadcoches" class="btn btn-info">
    Load Coches Ajax
</button> *@
<section class="w-full flex flex-row ">



    <form method="post" name="empresas" id="formElement">
        <div class="w-full  flex flex-row flex-wrap gap-4 p-4">
            @foreach (var item in Model.Item1)
            {

                var idEmpresa = item.IdEmpresa.ToString();
                var isChecked = empresasSeleccionadas != null && empresasSeleccionadas.Any(e => e.Contains($"idempresa{idEmpresa}="));


                <div>
                    <input type="checkbox" id="@Html.DisplayFor(modelItem => item.IdEmpresa)" class="hidden peer" value="@Html.DisplayFor(modelItem => item.IdEmpresa)" @(isChecked ? "checked=true" : "") />

                    <label for="@Html.DisplayFor(modelItem => item.IdEmpresa)" class="relative inline-flex items-center justify-between  peer-checked:ring-8 peer-checked:ring-green-600 peer-checked:outline-none duration-300  text-gray-500 bg-white border-2 border-gray-200 rounded-2xl cursor-pointer dark:hover:text-gray-300 dark:border-gray-700 peer-checked:border-blue-600   hover:text-gray-600 dark:peer-checked:text-gray-300 peer-checked:text-gray-600 hover:bg-gray-50 dark:text-gray-400 dark:bg-gray-800 dark:hover:bg-gray-700">
                        <div class="cursor-pointer group overflow-hidden p-5 duration-1000 hover:duration-1000 relative w-64 h-64 bg-neutral-800 rounded-xl">
                            <div class="bg-transparent group-hover:scale-150 -top-12 -left-12 absolute shadow-yellow-800 shadow-inner rounded-full transition-all ease-in-out group-hover:duration-1000 duration-1000 w-24 h-24"></div>
                            <div class="bg-transparent group-hover:scale-150 top-44 left-14 absolute shadow-red-800 shadow-inner rounded-full transition-all ease-in-out group-hover:duration-1000 duration-1000 w-24 h-24"></div>
                            <div class="bg-transparent group-hover:scale-150 top-24 left-56 absolute shadow-sky-800 shadow-inner rounded-full transition-all ease-in-out group-hover:duration-1000 duration-1000 w-24 h-24"></div>
                            <div class="bg-transparent group-hover:scale-150 top-12 left-12 absolute shadow-red-800 shadow-inner rounded-full transition-all ease-in-out group-hover:duration-1000 duration-1000 w-12 h-12"></div>
                            <div class="bg-transparent group-hover:scale-150 top-12 left-12 absolute shadow-green-800 shadow-inner rounded-full transition-all ease-in-out group-hover:duration-1000 duration-1000 w-44 h-44"></div>
                            <div class="bg-transparent group-hover:scale-150 -top-24 -left-12 absolute shadow-sky-800 shadow-inner rounded-full transition-all ease-in-out group-hover:duration-1000 duration-1000 w-64 h-64"></div>
                            <div class="bg-transparent group-hover:scale-150 top-24 left-12 absolute shadow-sky-500 shadow-inner rounded-full transition-all ease-in-out group-hover:duration-1000 duration-1000 w-4 h-4"></div>
                            <div class="w-full h-full shadow-xl shadow-neutral-900 p-3 bg-neutral-600 opacity-50 rounded-xl flex-col gap-2 flex justify-center">
                                @*  <span class="text-neutral-50 font-bold text-xl italic">@Html.DisplayFor(modelItem => item.Nombre)</span> *@
                                @*  <p class="text-neutral-300">
                            @Html.DisplayFor(modelItem => item.IdEmpresa)
                            </p> *@
                                <img src="https://buckettajamaraws.s3.amazonaws.com/@item.Imagen" />
                             @*    @foreach (BlobModel blob in Model.Item2)
                                {

                                    if (blob.Url == "https://buckettajamaraws.s3.amazonaws.com/" + item.Imagen)
                                    {
                                        <img src="@blob.Url" />
                                    }

                                } *@
                            </div>
                            <span class="absolute bottom-2 left-4 text-neutral-50 font-bold text-xl italic">@Html.DisplayFor(modelItem => item.Nombre)</span>
                            <a href="@Html.DisplayFor(modelItem=>item.Linkedin)" target="_blank" class="absolute bottom-2 right-4 text-neutral-50 font-bold text-xl italic">
                                <svg class="fill-blue-700 w-8 h-8" height="100" preserveaspectratio="xMidYMid meet" viewbox="0 0 100 100" width="100" x="0" xmlns="http://www.w3.org/2000/svg" y="0">
                                    <path class="fill-blue-700" d="M92.86,0H7.12A7.17,7.17,0,0,0,0,7.21V92.79A7.17,7.17,0,0,0,7.12,100H92.86A7.19,7.19,0,0,0,100,92.79V7.21A7.19,7.19,0,0,0,92.86,0ZM30.22,85.71H15.4V38H30.25V85.71ZM22.81,31.47a8.59,8.59,0,1,1,8.6-8.59A8.6,8.6,0,0,1,22.81,31.47Zm63,54.24H71V62.5c0-5.54-.11-12.66-7.7-12.66s-8.91,6-8.91,12.26V85.71H39.53V38H53.75v6.52H54c2-3.75,6.83-7.7,14-7.7,15,0,17.79,9.89,17.79,22.74Z">
                                    </path>
                                </svg>
                            </a>
                        </div>

                    </label>

                </div>
            }

        </div>
    </form>


    <div id="empresasSeleccionadas" class="w-72 min-w-72 "></div>

</section>